{"version":3,"sources":["serviceWorker.ts","components/imageSlider/imageSlider.tsx","components/home/home.tsx","components/menu/menu.tsx","components/restMenu/restMenu.tsx","models/reservationsModel.ts","components/reservations/reservations.tsx","components/layout/layout.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","ImageSilder","className","showArrows","infiniteLoop","showStatus","autoPlay","interval","src","alt","Component","Home","AOS","init","duration","data-aos","Menu","to","exact","RestMenu","ReservationsModel","id","fullName","numberOfPeople","date","timeOfArrivel","Reservations","props","setFullName","args","fullname","target","value","fullNameError","length","test","reservations","state","setState","errors","fullnameError","setDate","today","Date","getTime","dateError","setNumberOfPeople","undefined","NumberOfPeopleError","addReservation","a","isFormLegal","alert","axios","post","response","addedReservation","data","type","this","onChange","onClick","Layout","path","component","from","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a054c966.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport './imageSlider.css'\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\n\r\n\r\nexport class ImageSilder extends Component{\r\n    render() {\r\n        return (\r\n            <Carousel className='carousel' showArrows={true} infiniteLoop={true} showStatus={false} autoPlay={true} interval={3000}>\r\n                <div>\r\n                    <img src=\"assets/images/burger1.jpg\" alt='burger'/>\r\n                </div>\r\n                <div>\r\n                    <img src=\"assets/images/burger2.jpg\" alt='burger'/>\r\n                </div>\r\n                <div>\r\n                    <img src=\"assets/images/burger3.jpg\" alt='burger'/>\r\n                </div>\r\n            </Carousel>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './home.css';\r\nimport AOS from 'aos';\r\nimport 'aos/dist/aos.css';\r\nimport { ImageSilder } from '../imageSlider/imageSlider';\r\n\r\nexport class Home extends Component{\r\n    componentDidMount(){\r\n        AOS.init({\r\n          duration : 1000\r\n        })\r\n      }\r\n    public render(){\r\n        return(\r\n            <div className='home'  data-aos='fade-up'>\r\n                <div>\r\n                    <h1>Welcome to Morbize, Best Burger Joint in Tel Aviv</h1>\r\n                    <h4>Open Since 2001</h4>\r\n                    <hr/>\r\n                    <div>\r\n                        <ImageSilder/>\r\n                    </div>\r\n                    <div className='about'  data-aos=\"zoom-in-up\">\r\n                        <div className ='mainChef'>\r\n                            <div data-aos=\"zoom-in-up\">\r\n                                <h4> - Aharon Cohen - </h4>\r\n                                <hr/>\r\n                                <h5>Head Chef &amp; Owner</h5>\r\n                            </div>\r\n                                <div className ='chefImg'></div>\r\n                                <p data-aos=\"zoom-in-up\">\"It is my belief that one good burger can change a presons life.\"\r\n                                <br/>\r\n                                <br/>\r\n                                    -Aharon Cohen-\r\n                                </p>\r\n                          </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './menu.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport class Menu extends Component{\r\n    public render(){\r\n        return( \r\n            <div className='menu'>\r\n                <NavLink to='/home' exact>Home</NavLink>\r\n                <NavLink to='/restMenu' exact>Menu</NavLink>\r\n                <NavLink to='/reservations' exact>Reservations</NavLink>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './restMenu.css';\r\nimport AOS from 'aos';\r\nimport 'aos/dist/aos.css';\r\n\r\n\r\nexport class RestMenu extends Component{\r\n      componentDidMount(){\r\n        AOS.init({\r\n          duration : 1000\r\n        })\r\n      }\r\n    public render(){\r\n        return(\r\n            <div className='restMenu' data-aos='fade-up'>\r\n                <div>\r\n                    <h2>Menu</h2>\r\n                </div>\r\n                <span>- Burgers -</span>\r\n                <br/>\r\n                <div className='dish'>\r\n                    <h3> - Burger - </h3>\r\n                    <hr/>\r\n                    <p>Our special Meat blend in a garlic butter rosted brioche bun topped with lettce tomatos pickles and onion</p>\r\n                    <br/>\r\n                    <p>Toppings - Egg, Bacon, Blue Cheese, Mushrooms, Chile Pepers - 1.5$ -</p>\r\n                    <p>- 12$ -</p>\r\n                    <br/>\r\n                    <h3> -Double Cheese Burger - </h3>\r\n                    <hr/>\r\n                    <p>Our special Meat blend in a garlic butter rosted brioche bun topped with lettce tomatos pickles and onion with some good ol' american cheese</p>\r\n                    <br/>\r\n                    <p>Toppings - Egg, Bacon, Blue Cheese, Mushrooms, Chile Pepers - 1.5$ -</p>\r\n                    <p>- 12$ -</p>\r\n                </div>\r\n                <br/>\r\n                <br/>\r\n                <span>- Sides -</span>\r\n                <div className = 'dish sideDish'>\r\n                    <h3>Fries</h3>\r\n                    <hr/>\r\n                    <p>Our signature Fries</p>\r\n                    <br/>\r\n                    <p>Toppings - Cheese Mountain, Bacon, Antricot Chunks, Chile Pepers - 0.5$ -</p>\r\n                    <br/>\r\n                    <h3>Wings</h3>\r\n                    <hr/>\r\n                    <p>Hot chili wings, Hot as Chili Wings should be </p>\r\n                    <br/>\r\n                    <p>Toppings - Cheese Mountain, Bacon, Antricot Chunks, Chile Pepers - 0.5$ -</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","export class ReservationsModel{\r\n    public constructor(\r\n        public id?:number,\r\n        public fullName?:string,\r\n        public numberOfPeople?:number,\r\n        public date?:string,\r\n        public timeOfArrivel?:number){\r\n    }\r\n}","import React, { Component, ChangeEvent } from 'react';\r\nimport './reservations.css';\r\nimport { ReservationsModel } from '../../models/reservationsModel';\r\nimport axios from 'axios';\r\n\r\ninterface ReservationsState{\r\n    reservations: ReservationsModel;\r\n    errors: {fullnameError:string, dateError:string, NumberOfPeopleError:string};\r\n}\r\n\r\nexport class Reservations extends Component<any,ReservationsState>{\r\n    public constructor(props:any){\r\n        super(props)\r\n        this.state = {\r\n            reservations: new ReservationsModel(),\r\n            errors: { fullnameError: \"*\",dateError: '*',NumberOfPeopleError: '*'}\r\n        }\r\n    }\r\n    private setFullName = (args: ChangeEvent<HTMLInputElement>) =>{\r\n        const fullname = args.target.value;\r\n        let fullNameError = '';\r\n        if (fullname === \"\"){\r\n            fullNameError = 'Missing Name!'\r\n        }\r\n        if(fullname.length>30){\r\n            fullNameError = 'Name cannot be above 30 characters!'\r\n        }\r\n        if( /\\d/.test(fullname)){\r\n            fullNameError = 'Name cannot contain numbers!'\r\n        }\r\n        const reservations = {...this.state.reservations}\r\n        reservations.fullName = fullname\r\n        this.setState({reservations});\r\n\r\n        const errors = {...this.state.errors}\r\n        errors.fullnameError = fullNameError;\r\n        this.setState({errors});\r\n    }\r\n\r\n    // ------------------------------------------------------------------\r\n\r\n    private setDate= (args: ChangeEvent<HTMLInputElement>) =>{\r\n        const date = args.target.value;\r\n        const today = new Date().getTime()\r\n        const resDate = new Date(date).getTime()\r\n\r\n        let dateError = '';\r\n        if (date === \"\"){\r\n            dateError = 'Missing Date!'\r\n        }\r\n        if(resDate<today){\r\n            dateError = 'Cannot reserve table in the past'\r\n        }\r\n        const reservations = {...this.state.reservations}\r\n        reservations.date = date\r\n        this.setState({reservations});\r\n\r\n        const errors = {...this.state.errors}\r\n        errors.dateError = dateError;\r\n        this.setState({errors});\r\n    } \r\n\r\n    // ------------------------------------------------------------------\r\n\r\n    private setNumberOfPeople= (args: ChangeEvent<HTMLInputElement>) =>{\r\n        const numberOfPeople = args.target.value === \"\" ? undefined : +args.target.value;\r\n\r\n        let NumberOfPeopleError = '';\r\n        if (numberOfPeople === undefined){\r\n            NumberOfPeopleError = 'Missing Number of People!'\r\n        }\r\n        if (numberOfPeople>16){\r\n            NumberOfPeopleError = 'Number of People cannot be over 16!'\r\n        }\r\n        if (numberOfPeople<0){\r\n            NumberOfPeopleError = \"Can't be negative!\"\r\n        }\r\n\r\n\r\n        const reservations = {...this.state.reservations}\r\n        reservations.numberOfPeople = numberOfPeople\r\n        this.setState({reservations});\r\n\r\n        const errors = {...this.state.errors}\r\n        errors.NumberOfPeopleError = NumberOfPeopleError;\r\n        this.setState({errors});\r\n    } \r\n\r\n    // ------------------------------------------------------------------\r\n    private addReservation = async() =>{\r\n        try{\r\n            if(!this.isFormLegal()){\r\n                alert('Please correct the form')\r\n                return\r\n            }\r\n            const response = await axios.post<ReservationsModel>(\"http://localhost:3001/reservations\",this.state.reservations)\r\n            const addedReservation = response.data;\r\n            alert('Reservation complete! your reserved table number is: '+addedReservation.id )\r\n        }catch(err){\r\n            alert(err)\r\n        }\r\n    }\r\n\r\n    private isFormLegal = () =>{\r\n        return this.state.errors.NumberOfPeopleError === '' &&\r\n            this.state.errors.dateError === '' &&\r\n            this.state.errors.fullnameError === '';\r\n    }\r\n\r\n    public render(){\r\n        return(\r\n            <div className = 'reservations'>\r\n                <h1>Reserve your table now!</h1>\r\n                <hr/>\r\n                <span className='fieldTitle'>Full Name</span>\r\n                <input type ='text' value={this.state.reservations.fullName|| \"\"} onChange={this.setFullName}/>\r\n                <span>{this.state.errors.fullnameError}</span>\r\n                <br /><br />\r\n                <span className='fieldTitle'>Date</span>\r\n                <input type='date' value={this.state.reservations.date || undefined} onChange={this.setDate}/>\r\n                <span>{this.state.errors.dateError}</span>\r\n                <br /><br />\r\n                <span className='fieldTitle'>Number of Diners</span>\r\n                <input type='number' value={this.state.reservations.numberOfPeople || undefined} onChange={this.setNumberOfPeople}/>\r\n                <span>{this.state.errors.NumberOfPeopleError}</span>\r\n                <br /><br />\r\n                <button onClick={this.addReservation}>Approve Reservation</button>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport './layout.css';\r\nimport { Home } from '../home/home';\r\nimport { Menu } from '../menu/menu';\r\nimport { RestMenu } from '../restMenu/restMenu';\r\nimport { Reservations } from '../reservations/reservations';\r\n\r\n\r\n\r\nexport class Layout extends Component{\r\n    public render(){\r\n        return(\r\n            <div className ='layout'>\r\n                <BrowserRouter>\r\n                <aside>\r\n                    <Menu/>\r\n                </aside>\r\n                <header>\r\n                    <h1> - Morbeiz - </h1>\r\n                </header>\r\n                <main>\r\n                    <Switch>\r\n                        <Route path='/reservations' component={Reservations} exact/>\r\n                        <Route path='/home' component={Home} exact/>\r\n                        <Route path='/restMenu' component={RestMenu} exact/>\r\n                        <Redirect from='/' to='/home' exact/>\r\n                    </Switch> \r\n                </main>\r\n                <footer>\r\n\r\n                </footer>\r\n                </BrowserRouter>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { Layout } from './components/layout/layout';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Layout />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}